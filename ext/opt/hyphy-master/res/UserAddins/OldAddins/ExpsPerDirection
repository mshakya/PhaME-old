likelihoodFnChoice = 0;
if (Rows("LikelihoodFunction")>1)
{
	ChoiceList  (likelihoodFnChoice,"Choose a Likelihood Function",1,NO_SKIP,LikelihoodFunction);
}		

if (likelihoodFnChoice<0)
{
	return;
} 
	
GetString (LF_NAME,LikelihoodFunction,likelihoodFnChoice);

ExecuteCommands ("LFCompute ("+LF_NAME+",LF_START_COMPUTE);");
ExecuteCommands ("LFCompute ("+LF_NAME+",res);");
mxCount   	    = MATRIX_EXPONENTIATION_COUNTS;

ExecuteCommands ("GetString(indepParams,"+ LF_NAME + ",-1);");

globalList = indepParams["Global Independent"];
for (k=0; k<Columns(globalList);k=k+1)
{
	ExecuteCommands (globalList[k] +" = "+globalList[k]+"*Random(0.95,1.05);");
	ExecuteCommands ("LFCompute ("+LF_NAME+",res);");
	fprintf (stdout, globalList[k], " => ", MATRIX_EXPONENTIATION_COUNTS-mxCount, "\n");
	mxCount = MATRIX_EXPONENTIATION_COUNTS;
}
globalList = indepParams["Local Independent"];
for (k=0; k<Columns(globalList);k=k+1)
{
	ExecuteCommands (globalList[k] +" = "+globalList[k]+"*Random(0.95,1.05);");
	ExecuteCommands ("LFCompute ("+LF_NAME+",res);");
	fprintf (stdout, globalList[k], " => ", MATRIX_EXPONENTIATION_COUNTS-mxCount, "\n");
	mxCount = MATRIX_EXPONENTIATION_COUNTS;
}
ExecuteCommands ("LFCompute ("+LF_NAME+",LF_DONE_COMPUTE);");
